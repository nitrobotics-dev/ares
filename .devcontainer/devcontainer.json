{
    "name": "Python 3",
    "mounts": [
        // "source=${localEnv:HOME}/cert.pem,target=/etc/ssl/certs/ca-certificates.crt,type=bind,readonly,consistency=cached",
        // "source=${localEnv:HOME}/.config/gcloud,target=/root/.config/gcloud,type=bind,consistency=cached",
        "source=${localWorkspaceFolder}/data,target=/workspaces/ares/data,type=bind,consistency=cached",
        "source=/tmp,target=/tmp,type=bind"
        // "source=${localEnv:HOME}/.cache/huggingface,target=/cache/huggingface,type=bind,consistency=cached",
        // "source=${localEnv:HOME}/.modal.toml,target=/root/.modal.toml,type=bind,consistency=cached"
    ],
    "build": {
        "dockerfile": "../Dockerfile",
        "context": ".."
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-python.black-formatter",
                "ms-toolsai.jupyter",
                "ms-azuretools.vscode-docker",
                "ms-python.isort",
                "matangover.mypy",
                "mongodb.mongodb-vscode" 
            ],
            "settings": {
                "[python]": {
                    "editor.defaultFormatter": "ms-python.black-formatter",
                    "editor.formatOnSave": true
                },
                "files.watcherExclude": {
                    "**/*": true,
                    "**/data/**": true,
                    "**/cache/**": true,
                    "**/tmp/**": true,
                    "**/.git/objects/**": true,
                    "**/.git/subtree-cache/**": true
                }
            }
        }
    },
    "forwardPorts": [27017],
    "remoteUser": "root",
    "remoteEnv": {
        "SSL_CERT_FILE": "/etc/ssl/certs/ca-certificates.crt",
        "REQUESTS_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
        "CURL_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
        "GOOGLE_APPLICATION_CREDENTIALS": "/root/.config/gcloud/application_default_credentials.json",
        "OPENAI_API_KEY": "${localEnv:OPENAI_API_KEY}",
        "ANTHROPIC_API_KEY": "${localEnv:ANTHROPIC_API_KEY}",
        "HUGGINGFACE_API_KEY": "${localEnv:HUGGINGFACE_API_KEY}",
        "VERTEX_PROJECT": "${localEnv:VERTEX_PROJECT}",
        "VERTEX_LOCATION": "${localEnv:VERTEX_LOCATION}",
        "GEMINI_API_KEY": "${localEnv:GEMINI_API_KEY}",
        "MONGODB_URI": "mongodb://localhost:27017",
        "TRANSFORMERS_CACHE": "/cache/huggingface"
    },
    "runArgs": ["--network=host"],
    "postCreateCommand": "pip install black pylint jupyter ipykernel mypy isort pymongo --retries 10"
}
